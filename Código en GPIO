#include <gpio.h> //Se incluye la libreria gpio.h para poder ejecutar las acciones en este idioma //
//Se define cada una de las variables y los puertos correspondientes en el ESP32//
#define SUMA 21
#define RESTA 19
#define CAMBIO 18
#define LED1 25
#define LED2 26
#define LED3 27
#define LED4 14
//Definimos el contador que ser치 empleado para sumar y restar posiciones //
int contador = 0;
int antes = 1;
int actual = 0;
int futuro = 1;

void setup() {
  Serial.begin(15200); // Se inicia la comunicaci칩n serial 
//Definimos que variables funcionan como entradas o salidas y cuales tienen resistencias pull-up o pull-down internas
  gpio_set_direction(CAMBIO, GPIO_MODE_INPUT);
  gpio_set_pull_mode(CAMBIO, GPIO_PULLUP_ONLY);
  
  gpio_set_direction(RESTA, GPIO_MODE_INPUT);
  gpio_set_pull_mode(RESTA, GPIO_FLOATING);
  
  gpio_set_direction(SUMA, GPIO_MODE_INPUT);
  gpio_set_pull_mode(SUMA, GPIO_PULLDOWN_ONLY);
  
  gpio_set_direction(LED1, GPIO_MODE_OUTPUT);
  gpio_set_direction(LED2, GPIO_MODE_OUTPUT);
  gpio_set_direction(LED3, GPIO_MODE_OUTPUT);
  gpio_set_direction(LED4, GPIO_MODE_OUTPUT);
  // Implementamos el estado inicial de los leds es decir si queremos que esten encendidos o apagados al inicio 
  gpio_set_level(LED1, 0);
  gpio_set_level(LED2, 0);
  gpio_set_level(LED3, 0);
  gpio_set_level(LED4, 0);
}

void loop() {
//Procedemos a leer el estado de cada uno de los botones
  int sumaState = gpio_get_level(SUMA);
  int restaState = gpio_get_level(RESTA);
  int cambioState = gpio_get_level(CAMBIO);
  //Solicitamos que el estado de los botones se proyecte en el monitor sereal 
  Serial.print("SUMA: ");
  Serial.print(sumaState);
  Serial.print(" RESTA: ");
  Serial.print(restaState);
  Serial.print(" CAMBIO: ");
  Serial.println(cambioState);
  delay(200);
  //Establecemos las condiciones para el cambio de modo(decimal o binario) y se programa el contador para iniciar en 0
  if (cambioState == 0) {
    antes = actual;
    actual = futuro;
    futuro = antes;
    contador = 0;
  }
//Para el modo binario planteamos que sucede en dependencia de los estados de botones de suma y resta, es decir si el contador suma una posici칩n o resta una 
  if (actual == 1) {
    if (sumaState) {
      contador++;
    } else if (restaState) {
      contador--;
    }
    if (contador > 15) {
      contador = 0;
    } else if (contador < 0) {
      contador = 0;
    }
    Serial.print(contador);//Imprimimos los valores del contador en el monitor sereal
//Establecemos el comportamiento de las leds en dependencia el contador
    gpio_set_level(LED1, contador & 1);
    gpio_set_level(LED2, (contador >> 1) & 1);
    gpio_set_level(LED3, (contador >> 2) & 1);
    gpio_set_level(LED4, (contador >> 3) & 1);
  } 
else if (actual == 0) {//Para el modo decena establecemos que suceder치 con el contador en dependencia del estado d elos botones de suma y resta
    if (sumaState) {
      contador++;
    } else if (restaState) {
      contador--;
    }
    if (contador > 4) {
      contador = 0;
    } else if (contador < 0) {
      contador = 0;
    }
    Serial.print(contador);
//Se establece el comportamiento de los leds en dependencia del contador
    gpio_set_level(LED1, contador == 1);
    gpio_set_level(LED2, contador == 2);
    gpio_set_level(LED3, contador == 3);
    gpio_set_level(LED4, contador == 4);
  }
}
